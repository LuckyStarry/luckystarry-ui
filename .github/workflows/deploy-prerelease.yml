name: DEPLOY-PRERELEASE
on:
  push:
    tags:
      - v[0-9].[0-9].[0-9]-*
jobs:
  ci-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Set Nodejs Version
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm i
      - name: Unit Tests
        run: npm test
  deploy-npm:
    needs: [ci-test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Set Nodejs Version
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Install Dependencies
        run: npm i
      - name: Publish On NPM
        run: npm publish --tag=beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  deploy-myget:
    needs: [ci-test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Set Nodejs Version
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://www.myget.org/F/luckystarry/npm/'
      - name: Install Dependencies
        run: npm i
      - name: Publish On MYGET
        run: npm publish --tag=beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.MYGET_TOKEN }}
  deploy-github:
    needs: [ci-test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Set Nodejs Version
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com'
      - name: Install Dependencies
        run: npm i
      - name: Publish On GITHUB
        run: npm publish --tag=beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  github-tag-prelease:
    needs: [deploy-github, deploy-myget]
    runs-on: ubuntu-latest
    steps:
      - name: Get Tag
        id: version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Pre-Release Github Tag
        uses: release-drafter/release-drafter@v5
        with:
          name: ${{ steps.version.outputs.VERSION }}
          tag: ${{ steps.version.outputs.VERSION }}
          publish: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
